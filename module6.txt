1) Explain in your own words what Bash is.

Bash is when you communicate or interact with a computer through a Graphical User Interface or a more simple term GUI. This usually is accomplished when you create a new folder, save a file, open a file or search for certain things on your hard drive and etc. When you speak with your computer by using a interpreter GUI basically is a bunch of commands that are sent to your computer to accomplish a specific task that has to do with files on your hard drive. Examples of such things may include : creating files and directories (folders), opening a directory to view its content, changing permissions by making a file admin only, changing file names, copying or moving files, renaming files and directories, deleting things, basically whatever you do on a computer outside of the browser  and installed programs we can be tied to Bash. We can look at bash as a command language interpreter which is technically called ‘’Bourn Again SHell’’ which is an implementation of Shell but we can just call it BASH. Bash is the primary program that a computer uses to receive code (I.e commands )which I mentioned some of the stuff earlier and  then information is returned through bash by writing the commands ( i.e output). Again you can Bash to perform operations and multiple files at the same time quickly through the command line. Bash is important because with bash commands it’s an efficient and powerful way to interact with your computer and when you’re able to perform many tasks more efficiently  and automate and relocate the work that goes across different operating systems everything becomes much easier to execute. 

2) Explain what the Terminal is.

A terminal Is a interface which allows you to access many command line to communicate or give orders to the computer. A terminal can be used as a interface for communicating to the computer by typing and executing text base commands through it.  A common terminal task of finding or moving a file could be achieved with a single command rather than navigating through menus or desktop options.  Basically terminals which  are also known as command lines or consoles successfully and efficiently accomplish and automate specific tasks without using graphical user interface (GUI). Due to different variations in operating systems the terminal program is different for each one. Now another cool thing is that through a terminal emulator we may access another computer, even the ones that are remote through its command line. You’ll be able to do this only if you are the host computer. By doing so you would be able to use or run applications on that computer and also will be able to transfer files between computers. The computers do need to be running on the same operating system though or else it won't be possible. 

3) Explain in your own words what Bash Commands are.

Bash is a command language used for job management of doing multiple tasks in a computer system. It was written by Brian Fox which was released in 1989. It is a domain specific-language (DSL) meaning that it’s a computer language specialized to a specific  application domain. The bash language is a sh-compatible  command language interpreter that performs commands read from standard input or from a file.  We can say bash command is a command syntax . It's basically the smallest unit of code which bash processes.  The code/command tells bash what we want bash to do. Once the command task that we write has been processed and executed by bash it is returned to us. One example of a bash command is pwd ; pwd stands for print working directory. By printing this command all the available working directory, that shell recognizes. This will also be the main or default place where shell commands will be searching for data files. We can access different directories (folders) and path our way into them by typing slash (/) then the name of the directory so we can go into different files within. We can also navigate through and organize files in the directories by typing in ls (list of directors) or  changing to desired directory by pressing cd (change directory).

4) Explain why the Terminal is essential.

Back in the day or the early days of computing, the computer that processed or did certain tasks/operations was not the same tool that gave the instruction to process the information. The terminal was used for sending commands to the computer and the computer was the hardware that processed the commands. But nowadays the computer gives you the option to do that in one through the graphical user interface also known as the GUI. But at times accessing the terminal or command line could be much more efficient than using GUI’s  for certain tasks. Through the terminal you can type in commands to accomplish these tasks.This is crucial because when working with files for example will take a lot less time then working in a graphic setting. It is easier to work with files in the terminal then for example on Finder in Mac or Windows Explorer or menus.  Terminal is also essential because through the terminal we can launch and execute tools such as Python , Git and other programs. Another reason that is essential is if someone is helping you with a task or helping you find something (give orders in a sense) on a computer you are able type in everything directly through to the terminal with the commands rather than having to search for certain apps or menu items. Another advantage with using the terminal is that everything you do in the terminal can be scripted and automated.


5) Explain Bash piping.

In unix every standard process has at least 3 file descriptors which are Standard Output , Standard Input, Standard error. Standard Output would be the place where the process prints its data which in this case would be the terminal, the Standard Input it's the place where the process would get the data from.  Bash piping is a special process where we can send the output of one command as an input to another command. When we type in a command, send its output. A pipe works on two things which is the standard output of that process on the left and the expected input data flow in a sense to the right. The main purpose of the pipeline in a way is to send an output of a process to the standard input of another. 
